using System;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace Covid19ImmunityCert.Contracts.Covid19Certification.ContractDefinition
{
    public partial class TestBrokerDeployment : TestBrokerDeploymentBase
    {
        public TestBrokerDeployment() : base(BYTECODE) { }
        public TestBrokerDeployment(string byteCode) : base(byteCode) { }
    }

    public class TestBrokerDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "";
        public TestBrokerDeploymentBase() : base(BYTECODE) { }
        public TestBrokerDeploymentBase(string byteCode) : base(byteCode) { }
    }

    public partial class AddSampleCentreFunction : AddSampleCentreFunctionBase { }

    [Function("addSampleCentre")]
    public class AddSampleCentreFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "newCentre", 1)]
        public virtual SampleCentre NewCentre { get; set; }
    }

    public partial class AddSampleCentreToLocationCacheFunction : AddSampleCentreToLocationCacheFunctionBase { }

    [Function("addSampleCentreToLocationCache")]
    public class AddSampleCentreToLocationCacheFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "newCentre", 1)]
        public virtual SampleCentre NewCentre { get; set; }
    }

    public partial class AddTestingAffiliationFunction : AddTestingAffiliationFunctionBase { }

    [Function("addTestingAffiliation")]
    public class AddTestingAffiliationFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "sampleCentreId", 1)]
        public virtual byte[] SampleCentreId { get; set; }
        [Parameter("bytes32", "testCentreId", 2)]
        public virtual byte[] TestCentreId { get; set; }
        [Parameter("bytes32", "insuranceGrp", 3)]
        public virtual byte[] InsuranceGrp { get; set; }
    }

    public partial class AdministratorsFunction : AdministratorsFunctionBase { }

    [Function("administrators", "bool")]
    public class TBAdministratorsFunctionBase : FunctionMessage
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetSampleCentreFunction : GetSampleCentreFunctionBase { }

    [Function("getSampleCentre", typeof(GetSampleCentreOutputDTO))]
    public class GetSampleCentreFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "sampleCentreId", 1)]
        public virtual byte[] SampleCentreId { get; set; }
    }

    public partial class GetSampleCentresWithAvailableTestsFunction : GetSampleCentresWithAvailableTestsFunctionBase { }

    [Function("getSampleCentresWithAvailableTests", typeof(GetSampleCentresWithAvailableTestsOutputDTO))]
    public class GetSampleCentresWithAvailableTestsFunctionBase : FunctionMessage
    {
        [Parameter("uint16", "minWaitTimeInDays", 1)]
        public virtual ushort MinWaitTimeInDays { get; set; }
    }

    public partial class SampleCentreOwnersFunction : SampleCentreOwnersFunctionBase { }

    [Function("sampleCentreOwners", "bool")]
    public class SampleCentreOwnersFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
        [Parameter("address", "", 2)]
        public virtual string ReturnValue2 { get; set; }
    }

    public partial class UpdateSampleCentreFunction : UpdateSampleCentreFunctionBase { }

    [Function("updateSampleCentre")]
    public class UpdateSampleCentreFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "updateCentre", 1)]
        public virtual SampleCentre UpdateCentre { get; set; }
    }

    public partial class UpsertSampleCentreOwnerFunction : UpsertSampleCentreOwnerFunctionBase { }

    [Function("upsertSampleCentreOwner")]
    public class UpsertSampleCentreOwnerFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "sampleCentreId", 1)]
        public virtual byte[] SampleCentreId { get; set; }
        [Parameter("address", "sampleCentreOwner", 2)]
        public virtual string SampleCentreOwner { get; set; }
        [Parameter("bool", "isOwner", 3)]
        public virtual bool IsOwner { get; set; }
    }

    public partial class AdministratorsOutputDTO : AdministratorsOutputDTOBase { }

    [FunctionOutput]
    public class TBAdministratorsOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetSampleCentreOutputDTO : GetSampleCentreOutputDTOBase { }

    [FunctionOutput]
    public class GetSampleCentreOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple", "", 1)]
        public virtual SampleCentre ReturnValue1 { get; set; }
    }

    public partial class GetSampleCentresWithAvailableTestsOutputDTO : GetSampleCentresWithAvailableTestsOutputDTOBase { }

    [FunctionOutput]
    public class GetSampleCentresWithAvailableTestsOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<SampleCentre> ReturnValue1 { get; set; }
    }

    public partial class SampleCentreOwnersOutputDTO : SampleCentreOwnersOutputDTOBase { }

    [FunctionOutput]
    public class SampleCentreOwnersOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class Coordinates : CoordinatesBase { }

    public class CoordinatesBase
    {
        [Parameter("uint256", "lat", 1)]
        public virtual BigInteger Lat { get; set; }
        [Parameter("uint256", "long", 2)]
        public virtual BigInteger Long { get; set; }
    }

    public partial class SampleCentre : SampleCentreBase { }

    public class SampleCentreBase
    {
        [Parameter("bytes32", "centreId", 1)]
        public virtual byte[] CentreId { get; set; }
        [Parameter("address", "signerAddress", 2)]
        public virtual string SignerAddress { get; set; }
        [Parameter("bytes32", "centreName", 3)]
        public virtual byte[] CentreName { get; set; }
        [Parameter("bool", "isActive", 4)]
        public virtual bool IsActive { get; set; }
        [Parameter("uint16", "avgTimeForResultsInDays", 5)]
        public virtual ushort AvgTimeForResultsInDays { get; set; }
        [Parameter("uint8", "avgTestSpecifityRating", 6)]
        public virtual byte AvgTestSpecifityRating { get; set; }
        [Parameter("uint8", "avgTestSensitivtyRating", 7)]
        public virtual byte AvgTestSensitivtyRating { get; set; }
        [Parameter("bytes32[]", "availableTestKitTypes", 8)]
        public virtual List<byte[]> AvailableTestKitTypes { get; set; }
        [Parameter("uint64", "availabileTestSlots", 9)]
        public virtual ulong AvailabileTestSlots { get; set; }
        [Parameter("uint64", "capacityTestSlots", 10)]
        public virtual ulong CapacityTestSlots { get; set; }
        [Parameter("uint8", "hotZoneLevel", 11)]
        public virtual byte HotZoneLevel { get; set; }
        [Parameter("bool", "acceptingRetestingApplicants", 12)]
        public virtual bool AcceptingRetestingApplicants { get; set; }
        [Parameter("uint256", "maxRetestsPerApplicant", 13)]
        public virtual BigInteger MaxRetestsPerApplicant { get; set; }
        [Parameter("bool", "acceptingPlasmaDonations", 14)]
        public virtual bool AcceptingPlasmaDonations { get; set; }
        [Parameter("bool", "isPopupCentre", 15)]
        public virtual bool IsPopupCentre { get; set; }
        [Parameter("bool", "driveThruPossible", 16)]
        public virtual bool DriveThruPossible { get; set; }
        [Parameter("tuple", "location", 17)]
        public virtual Coordinates Location { get; set; }
        [Parameter("bool", "isValue", 18)]
        public virtual bool IsValue { get; set; }
    }
}

